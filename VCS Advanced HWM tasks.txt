1.

$ git clone https://github.com/dmytroTsmots/6-vcs-advanced.git
$ cd c:/Git/6-vcs-advanced/
$ mkdir assets
$ mkdir uploads
$ touch index.html
$ touch assets/text.txt
$ touch uploads/text.txt
$ git branch architecture
$ git checkout architecture
$ git config --global user.name "dmytroTsmots"
$ git config --global user.email dmytro.tsmots@gmail.com
$ git status
$ git add .
$ git commit -m "added new folders - assets, uploads and index.html"
$ touch assets/all.js
$ touch assets/css.js
$ git status
$ git add .
$ git commit -m "added files all.js, css.js to assets folder"
$ git push -u origin architecture
$ touch .gitignore
$ echo "/uploads/*" > .gitignore
$ cat .gitignore
$ git status
$ git add .
$ git commit -m "added .gitignore file"
$ git push
$ git checkout master
$ git merge architecture
$ git push
$ git branch -d architecture
$ git push origin :architecture

2.

$ git branch rebaseTask
$ mkdir task2
$ touch task2/text.txt
$ echo "get started VCS advanced task 2" > task2/text.txt
$ git add .
$ git commit -m "added task2 folder with text.txt explanation"
$ git checkout rebaseTask
$ git rebase master
$ touch task2/text1.txt
$ echo "new commit in branch rebaseTask" >> task2/text.txt
$ git add .
$ git commit -m "upload new file to task2 folder"
$ git checkout master
$ git rebase rebaseTask
$ git branch -d rebaseTask
$ git push

3.

$ mkdir task3
$ touch task3/text.txt
$ echo "get started VCS advanced task 3" > task3/text.txt
$ git add .
$ git commit -m "added task3 folder with text.txt explanation"
$ git tag -a v1.1 -m "version 1.1"
$ git tag
$ git show v1.1
$ git push

4.

$ git submodule add https://github.com/dmytroTsmots/6-vcs-advanced.git newModule
$ git status
$ cat .gitmodules
$ git commit -m "added new submodule"
$ git push

5.

$ git branch gh-pages
$ git checkout gh-pages
$ git add .
$ git commit -m "added index.html file"
$ git push -u origin gh-pages
$ git add .
$ git commit -m "added changes to index.html file gh-pages branch"
$ git push
https://dmytrotsmots.github.io/6-vcs-advanced/

6.

$ touch file.txt
$ echo "text" > file.txt
$ git add .
$ git commit -m "added file.txt"
$ git checkout gh-pages
$ touch file.txt
$ echo "some another" > file.txt
$ git add .
$ git commit -m "added file.txt to branch gh-pages"
$ git checkout master
$ git merge gh-pages

Auto-merging file.txt
CONFLICT (add/add): Merge conflict in file.txt
Automatic merge failed; fix conflicts and then commit the result.

$ notepad file.txt
$ git status
$ git add .
$ git commit -m "merged conflict"
$ git push